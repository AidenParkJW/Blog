"""
Django settings for Blog project.

Generated by 'django-admin startproject' using Django 3.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os, string, random, json
from django.conf.global_settings import LOGIN_REDIRECT_URL, AUTHENTICATION_BACKENDS,\
    DATA_UPLOAD_MAX_MEMORY_SIZE, FILE_UPLOAD_MAX_MEMORY_SIZE

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

with open(os.path.join(BASE_DIR, ".security/properties.json")) as fh:
    PROPERTIES = json.loads(fh.read())

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = 't9zfag+*dagh)1ai+q)hmz5*mb)1%9-dt0%te(-)@iqeu27pe_'
chars = "".join([string.ascii_letters, string.digits, string.punctuation]).replace("'", "").replace("\"", "").replace("\\", "")
SECRET_KEY = "".join([random.SystemRandom().choice(chars) for i in range(50)])

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    
    # debug toolbar
    'debug_toolbar',
    
    # tree
    'mptt',
    
    'attFile.apps.AttFileConfig',
    'post.apps.PostConfig',
    'menu.apps.MenuConfig',
    'tagging.apps.TaggingConfig',
    'disqus',
    
    # allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    
    # allauth provider 
    'allauth.socialaccount.providers.google',   # http://console.developers.google.com
    'allauth.socialaccount.providers.naver',    # https://developers.naver.com/apps/
    'allauth.socialaccount.providers.kakao',    # https://developers.kakao.com/
]

# allauth
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

DISQUS_WEBSITE_SHORTNAME = "blog-anzinda-com"
SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.sites.middleware.CurrentSiteMiddleware',
    
    # debug toolbar
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = "Blog.urls"

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.site',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

#WSGI_APPLICATION = 'Blog.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
#MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "media")

UPLOAD_ROOT = "upload"
UPLOAD_TEMP = os.path.join(MEDIA_ROOT, UPLOAD_ROOT, "temp")

VALID_EXTENSIONS = PROPERTIES["valid_extensions"]

# 100MB (1024 * 1024 * 100)
DATA_UPLOAD_MAX_MEMORY_SIZE = PROPERTIES["limit_file_size"]
FILE_UPLOAD_MAX_MEMORY_SIZE = PROPERTIES["limit_file_size"]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

#LANGUAGE_CODE = 'ko-kr'
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Seoul'
USE_I18N = True
USE_L10N = False
#USE_TZ = True

# https://docs.djangoproject.com/en/3.0/ref/templates/builtins/#date-and-time-formatting-specifiers
DATETIME_FORMAT = "Y/m/d H:i:s"

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = "/static/"
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]

# login
#LOGIN_URL = "/accounts/login/"
#LOGOUT_URL = "/accounts/logout/"
LOGIN_REDIRECT_URL = "/"

# SESSION Time
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_COOKIE_AGE = 3600 # on hour in seconds

# SMTP Settings
# https://support.google.com/mail/answer/7126229?hl=ko&rd=3&visit_id=1-636281811566888160-3239280507#ts=1665018
# https://support.google.com/accounts/answer/6010255
EMAIL_HOST = PROPERTIES["email"]["email_host"]
# 메일을 호스트하는 서버
EMAIL_PORT = PROPERTIES["email"]["email_post"]
# gmail과의 통신하는 포트
EMAIL_HOST_USER = PROPERTIES["email"]["email_host_user"]
# 발신할 이메일
EMAIL_HOST_PASSWORD = PROPERTIES["email"]["email_host_password"]
# 발신할 메일의 비밀번호
EMAIL_USE_TLS = PROPERTIES["email"]["email_use_tls"]
# TLS 보안 방법
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
# 사이트와 관련한 자동응답을 받을 이메일 주소

# logger
LOGGING = {
    'version': 1,
    'formatters': {
        'verbose': {
            'format': '[%(levelname)s] [%(asctime)s] %(module)s %(process)d %(thread)d %(message)s \n'
        },
        'simple': {
            'format': '[%(levelname)s] [%(asctime)s] %(message)s \n'
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/debug.log'),
            'maxBytes': 1024 * 1024 * 5, # 5MB
            'backupCount': 5,
            'formatter': 'simple'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    }
}

